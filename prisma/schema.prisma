generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid())
  email      String     @unique
  name       String
  password   String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  activeRole UserRole
  roles      UserRole[] @default([])
  cart       Cart?
  orders     Order[]
  products   Product[]
}

model Product {
  id          String      @id @default(uuid())
  name        String
  description String?
  price       Float
  quantity    Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  tags        String[]
  sellerId    String
  CartItem    CartItem[]
  OrderItem   OrderItem[]
  user        User        @relation(fields: [sellerId], references: [id])

  @@unique([name, sellerId])
}

model Order {
  id              String        @id @default(uuid())
  totalAmount     Float
  orderStatus     OrderStatus   @default(PENDING)
  paymentStatus   PaymentStatus @default(PENDING)
  shippingDetails String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  buyerId         String
  user            User          @relation(fields: [buyerId], references: [id])
  orderItems      OrderItem[]
}

model OrderItem {
  productId String
  orderId   String
  quantity  Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@id([orderId, productId])
}

model Cart {
  id        String     @id @default(uuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  buyerId   String     @unique
  user      User       @relation(fields: [buyerId], references: [id])
  cartItems CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  cartId    String
  productId String
  cart      Cart    @relation(fields: [cartId], references: [buyerId])
  product   Product @relation(fields: [productId], references: [id])

  @@unique([cartId, productId])
}

enum UserRole {
  ADMIN
  USER
  SELLER
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED
}

enum OrderStatus {
  PENDING
  CONFIRMED
  FAILED
  SHIPPED
  DELIVERED
  RETURNED
}
